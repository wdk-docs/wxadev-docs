# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Nosy
# This file is distributed under the same license as the wxadev package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: wxadev \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-09 22:55+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/framework/view/animation.rst:2
msgid "动画"
msgstr ""

#: ../../source/framework/view/animation.rst:4
msgid "界面动画的常见方式"
msgstr ""

#: ../../source/framework/view/animation.rst:6
msgid "在小程序中，通常可以使用 CSS 渐变 和 CSS 动画 来创建简易的界面动画。"
msgstr ""

#: ../../source/framework/view/animation.rst:8
#: ../../source/framework/view/animation.rst:39
msgid "在开发者工具中预览效果"
msgstr ""

#: ../../source/framework/view/animation.rst:10
msgid "同时，还可以使用 wx.createAnimation 接口来动态创建简易的动画效果。"
msgstr ""

#: ../../source/framework/view/animation.rst:12
msgid "动画过程中，可以使用 bindtransitionend bindanimationstart bindanimationiteration bindanimationend 来监听动画事件。"
msgstr ""

#: ../../source/framework/view/animation.rst:15
msgid "事件名"
msgstr ""

#: ../../source/framework/view/animation.rst:15
msgid "含义"
msgstr ""

#: ../../source/framework/view/animation.rst:17
msgid "transitionend"
msgstr ""

#: ../../source/framework/view/animation.rst:17
msgid "CSS 渐变结束或 wx.createAnimation 结束一个阶段"
msgstr ""

#: ../../source/framework/view/animation.rst:19
msgid "animationstart"
msgstr ""

#: ../../source/framework/view/animation.rst:19
msgid "CSS 动画开始"
msgstr ""

#: ../../source/framework/view/animation.rst:21
msgid "animationiteration"
msgstr ""

#: ../../source/framework/view/animation.rst:21
msgid "CSS 动画结束一个阶段"
msgstr ""

#: ../../source/framework/view/animation.rst:23
msgid "animationend"
msgstr ""

#: ../../source/framework/view/animation.rst:23
msgid "CSS 动画结束"
msgstr ""

#: ../../source/framework/view/animation.rst:26
msgid "这几个事件都不是冒泡事件，需要绑定在真正发生了动画的节点上才会生效。"
msgstr ""

#: ../../source/framework/view/animation.rst:28
msgid "高级的动画方式"
msgstr ""

#: ../../source/framework/view/animation.rst:30
msgid "在一些复杂场景下，上述的动画方法可能并不适用。"
msgstr ""

#: ../../source/framework/view/animation.rst:32
msgid "WXS 响应事件 的方式可以通过使用 WXS 来响应事件的方法来动态调整节点的 style 属性。 通过不断改变 style 属性的值可以做到动画效果。同时，这种方式也可以根据用户的触摸事件来动态地生成动画。"
msgstr ""

#: ../../source/framework/view/animation.rst:35
msgid "使用连续使用 setData 来改变界面的方法也可以达到动画的效果。这样可以任意地改变界面， 但通常会产生较大的延迟或卡顿，甚至导致小程序僵死。此时可以通过将页面的 setData 改为 自定义组件 中的 setData 来提升性能。 下面的例子是使用 setData 来实现秒表动画的示例。"
msgstr ""

