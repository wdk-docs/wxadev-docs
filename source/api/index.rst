.. _api:

:wxapi:`API <index>`
==========================

版本:|release| 更新:|today|

基础
-------

+--------------------------------+-------------------------------------------------------+
|              名称              |                       功能说明                        |
+================================+=======================================================+
| :func:`wx.canIUse`             | 判断小程序的API，回调，参数，组件等是否在当前版本可用 |
+--------------------------------+-------------------------------------------------------+
| :func:`wx.base64ToArrayBuffer` | 将 Base64 字符串转成 ArrayBuffer 对象                 |
+--------------------------------+-------------------------------------------------------+
| :func:`wx.arrayBufferToBase64` | 将 ArrayBuffer 对象转成 Base64 字符串                 |
+--------------------------------+-------------------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.canIUse
   wx.base64ToArrayBuffer
   wx.arrayBufferToBase64

系统信息
---------

+------------------------------+-----------------------------+
|             名称             |          功能说明           |
+==============================+=============================+
| :func:`wx.getSystemInfoSync` | :func:`wx.getSystemInfo` 的同步版本 |
+------------------------------+-----------------------------+
| :func:`wx.getSystemInfo`     | 获取系统信息                |
+------------------------------+-----------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.getSystemInfoSync
   wx.getSystemInfo

更新
-------

+----------------------------------------+--------------------------------------------------+
|                  名称                  |                     功能说明                     |
+========================================+==================================================+
| :func:`wx.getUpdateManager`            | 获取全局唯一的版本更新管理器，用于管理小程序更新 |
+----------------------------------------+--------------------------------------------------+
| :class:`UpdateManager`                 |                                                  |
+----------------------------------------+--------------------------------------------------+
| :func:`UpdateManager.applyUpdate`      | 强制小程序重启并使用新版本                       |
+----------------------------------------+--------------------------------------------------+
| :func:`UpdateManager.onCheckForUpdate` | 监听向微信后台请求检查更新结果事件               |
+----------------------------------------+--------------------------------------------------+
| :func:`UpdateManager.onUpdateFailed`   | 监听小程序更新失败事件                           |
+----------------------------------------+--------------------------------------------------+
| :func:`UpdateManager.onUpdateReady`    | 监听小程序有版本更新事件                         |
+----------------------------------------+--------------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   UpdateManager

..  wx.getUpdateManager
..  UpdateManager.applyUpdate
..  UpdateManager.onCheckForUpdate
..  UpdateManager.onUpdateFailed
..  UpdateManager.onUpdateReady


小程序
-------

生命周期
~~~~~~~~~~

+---------------------------------+------------------------+
|              名称               |        功能说明        |
+=================================+========================+
| :func:`wx.getLaunchOptionsSync` | 获取小程序启动时的参数 |
+---------------------------------+------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.getLaunchOptionsSync


应用级事件
~~~~~~~~~~

+--------------------------------------+----------------------------------------------+
|                 名称                 |                   功能说明                   |
+======================================+==============================================+
| :func:`wx.onPageNotFound`            | 监听小程序要打开的页面不存在事件             |
+--------------------------------------+----------------------------------------------+
| :func:`wx.onError`                   | 监听小程序错误事件                           |
+--------------------------------------+----------------------------------------------+
| :func:`wx.onAudioInterruptionEnd`    | 监听音频中断结束事件                         |
+--------------------------------------+----------------------------------------------+
| :func:`wx.onAudioInterruptionBegin`  | 监听音频因为受到系统占用而被中断开始事件     |
+--------------------------------------+----------------------------------------------+
| :func:`wx.onAppShow`                 | 监听小程序切前台事件                         |
+--------------------------------------+----------------------------------------------+
| :func:`wx.onAppHide`                 | 监听小程序切后台事件                         |
+--------------------------------------+----------------------------------------------+
| :func:`wx.offPageNotFound`           | 取消监听小程序要打开的页面不存在事件         |
+--------------------------------------+----------------------------------------------+
| :func:`wx.offError`                  | 取消监听小程序错误事件                       |
+--------------------------------------+----------------------------------------------+
| :func:`wx.offAudioInterruptionEnd`   | 取消监听音频中断结束事件                     |
+--------------------------------------+----------------------------------------------+
| :func:`wx.offAudioInterruptionBegin` | 取消监听音频因为受到系统占用而被中断开始事件 |
+--------------------------------------+----------------------------------------------+
| :func:`wx.offAppShow`                | 取消监听小程序切前台事件                     |
+--------------------------------------+----------------------------------------------+
| :func:`wx.offAppHide`                | 取消监听小程序切后台事件                     |
+--------------------------------------+----------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.onPageNotFound
   wx.onError
   wx.onAudioInterruptionEnd
   wx.onAudioInterruptionBegin
   wx.onAppShow
   wx.onAppHide
   wx.offPageNotFound
   wx.offError
   wx.offAudioInterruptionEnd
   wx.offAudioInterruptionBegin
   wx.offAppShow
   wx.offAppHide


调试
-----------

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.setEnableDebug
   LogManager
   console

.. table:: LogManager
   :widths: auto

   +---------------------------+----------------------+
   |           名称            |       功能说明       |
   +===========================+======================+
   | :func:`wx.setEnableDebug` | 设置是否打开调试开关 |
   +---------------------------+----------------------+
   | :func:`wx.getLogManager`  | 获取日志管理器对象   |
   +---------------------------+----------------------+
   | :func:`LogManager`        | 日志管理器对象       |
   +---------------------------+----------------------+
   | :func:`LogManager.debug`  | 写 debug 日志        |
   +---------------------------+----------------------+
   | :func:`LogManager.info`   | 写 info 日志         |
   +---------------------------+----------------------+
   | :func:`LogManager.log`    | 写 log 日志          |
   +---------------------------+----------------------+
   | :func:`LogManager.warn`   | 写 warn 日志         |
   +---------------------------+----------------------+

.. table:: console
   :widths: auto

   +--------------------------+---------------------------------+
   |           名称           |            功能说明             |
   +==========================+=================================+
   | :func:`console.debug`    | 向调试面板中打印 debug 日志     |
   +--------------------------+---------------------------------+
   | :func:`console.error`    | 向调试面板中打印 error 日志     |
   +--------------------------+---------------------------------+
   | :func:`console.group`    | 在调试面板中创建一个新的分组    |
   +--------------------------+---------------------------------+
   | :func:`console.groupEnd` | 结束由 console.group 创建的分组 |
   +--------------------------+---------------------------------+
   | :func:`console.info`     | 向调试面板中打印 info 日志      |
   +--------------------------+---------------------------------+
   | :func:`console.log`      | 向调试面板中打印 log 日志       |
   +--------------------------+---------------------------------+
   | :func:`console.warn`     | 向调试面板中打印 warn 日志      |
   +--------------------------+---------------------------------+

路由
-------

+-------------------------+--------------------------------------------------+
|          名称           |                     功能说明                     |
+=========================+==================================================+
| :func:`wx.switchTab`    | 跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面 |
+-------------------------+--------------------------------------------------+
| :func:`wx.reLaunch`     | 关闭所有页面，打开到应用内的某个页面             |
+-------------------------+--------------------------------------------------+
| :func:`wx.redirectTo`   | 关闭当前页面，跳转到应用内的某个页面             |
+-------------------------+--------------------------------------------------+
| :func:`wx.navigateTo`   | 保留当前页面，跳转到应用内的某个页面             |
+-------------------------+--------------------------------------------------+
| :func:`wx.navigateBack` | 关闭当前页面，返回上一页面或多级页面             |
+-------------------------+--------------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.switchTab
   wx.reLaunch
   wx.redirectTo
   wx.navigateTo
   wx.navigateBack

界面
-------

交互
~~~~~~~~~~

+----------------------------+---------------------+
|            名称            |      功能说明       |
+============================+=====================+
| :func:`wx.showToast`       | 显示消息提示框      |
+----------------------------+---------------------+
| :func:`wx.hideToast`       | 隐藏消息提示框      |
+----------------------------+---------------------+
| :func:`wx.showLoading`     | 显示 loading 提示框 |
+----------------------------+---------------------+
| :func:`wx.hideLoading`     | 隐藏 loading 提示框 |
+----------------------------+---------------------+
| :func:`wx.showModal`       | 显示模态对话框      |
+----------------------------+---------------------+
| :func:`wx.showActionSheet` | 显示操作菜单        |
+----------------------------+---------------------+



.. toctree::
   :maxdepth: 1
   :hidden:

   wx.showToast
   wx.hideToast
   wx.showLoading
   wx.hideLoading
   wx.showModal
   wx.showActionSheet

导航栏
~~~~~~~~~~

+-------------------------------------+------------------------------+
|                名称                 |           功能说明           |
+=====================================+==============================+
| :func:`wx.showNavigationBarLoading` | 在当前页面显示导航条加载动画 |
+-------------------------------------+------------------------------+
| :func:`wx.setNavigationBarTitle`    | 动态设置当前页面的标题       |
+-------------------------------------+------------------------------+
| :func:`wx.setNavigationBarColor`    | 设置页面导航条颜色           |
+-------------------------------------+------------------------------+
| :func:`wx.hideNavigationBarLoading` | 在当前页面隐藏导航条加载动画 |
+-------------------------------------+------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.showNavigationBarLoading
   wx.setNavigationBarTitle
   wx.setNavigationBarColor
   wx.hideNavigationBarLoading

背景
~~~~~~~~~~

+-----------------------------------+----------------------------------------+
|               名称                |                功能说明                |
+===================================+========================================+
| :func:`wx.setBackgroundTextStyle` | 动态设置下拉背景字体、loading 图的样式 |
+-----------------------------------+----------------------------------------+
| :func:`wx.setBackgroundColor`     | 动态设置窗口的背景色                   |
+-----------------------------------+----------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.setBackgroundTextStyle
   wx.setBackgroundColor

Tab Bar
~~~~~~~~~~

+------------------------------+----------------------------------+
|             名称             |             功能说明             |
+==============================+==================================+
| :func:`wx.showTabBarRedDot`  | 显示 tabBar 某一项的右上角的红点 |
+------------------------------+----------------------------------+
| :func:`wx.showTabBar`        | 显示 tabBar                      |
+------------------------------+----------------------------------+
| :func:`wx.setTabBarStyle`    | 动态设置 tabBar 的整体样式       |
+------------------------------+----------------------------------+
| :func:`wx.setTabBarItem`     | 动态设置 tabBar 某一项的内容     |
+------------------------------+----------------------------------+
| :func:`wx.setTabBarBadge`    | 为 tabBar 某一项的右上角添加文本 |
+------------------------------+----------------------------------+
| :func:`wx.removeTabBarBadge` | 移除 tabBar 某一项右上角的文本   |
+------------------------------+----------------------------------+
| :func:`wx.hideTabBarRedDot`  | 隐藏 tabBar 某一项的右上角的红点 |
+------------------------------+----------------------------------+
| :func:`wx.hideTabBar`        | 隐藏 tabBar                      |
+------------------------------+----------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.showTabBarRedDot
   wx.showTabBar
   wx.setTabBarStyle
   wx.setTabBarItem
   wx.setTabBarBadge
   wx.removeTabBarBadge
   wx.hideTabBarRedDot
   wx.hideTabBar

字体
~~~~~~~~~~

+-------------------------+------------------+
|          名称           |     功能说明     |
+=========================+==================+
| :func:`wx.loadFontFace` | 动态加载网络字体 |
+-------------------------+------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.loadFontFace

下拉刷新
~~~~~~~~~~

+---------------------------------+----------------------+
|              名称               |       功能说明       |
+=================================+======================+
| :func:`wx.startPullDownRefresh` | 开始下拉刷新         |
+---------------------------------+----------------------+
| :func:`wx.stopPullDownRefresh`  | 停止当前页面下拉刷新 |
+---------------------------------+----------------------+


.. toctree::
   :maxdepth: 1
   :hidden:

   wx.startPullDownRefresh
   wx.stopPullDownRefresh


滚动
~~~~~~~~~~

+-------------------------+----------------------+
|          名称           |       功能说明       |
+=========================+======================+
| :func:`wx.pageScrollTo` | 将页面滚动到目标位置 |
+-------------------------+----------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.pageScrollTo

动画
~~~~~~~~~~

+----------------------------+----------------------------+
|            名称            |          功能说明          |
+============================+============================+
| :func:`wx.createAnimation` | 创建一个动画实例 animation |
+----------------------------+----------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.createAnimation

Animation
^^^^^^^^^^^^

+-----------------------------------+--------------------------------+
|               名称                |            功能说明            |
+===================================+================================+
| :func:`Animation.translateZ`      | 对 Z 轴平移                    |
+-----------------------------------+--------------------------------+
| :func:`Animation.translateY`      | 对 Y 轴平移                    |
+-----------------------------------+--------------------------------+
| :func:`Animation.translateX`      | 对 X 轴平移                    |
+-----------------------------------+--------------------------------+
| :func:`Animation.translate3d`     | 对 xyz 坐标进行平移变换        |
+-----------------------------------+--------------------------------+
| :func:`Animation.translate`       | 平移变换                       |
+-----------------------------------+--------------------------------+
| :func:`Animation.top`             | 设置 top 值                    |
+-----------------------------------+--------------------------------+
| :func:`Animation.step`            | 表示一组动画完成               |
+-----------------------------------+--------------------------------+
| :func:`Animation.skewY`           | 对 Y 轴坐标进行倾斜            |
+-----------------------------------+--------------------------------+
| :func:`Animation.skewX`           | 对 X 轴坐标进行倾斜            |
+-----------------------------------+--------------------------------+
| :func:`Animation.skew`            | 对 X、Y 轴坐标进行倾斜         |
+-----------------------------------+--------------------------------+
| :func:`Animation.scaleZ`          | 缩放 Z 轴                      |
+-----------------------------------+--------------------------------+
| :func:`Animation.scaleY`          | 缩放 Y 轴                      |
+-----------------------------------+--------------------------------+
| :func:`Animation.scaleX`          | 缩放 X 轴                      |
+-----------------------------------+--------------------------------+
| :func:`Animation.scale3d`         | 缩放                           |
+-----------------------------------+--------------------------------+
| :func:`Animation.scale`           | 缩放                           |
+-----------------------------------+--------------------------------+
| :func:`Animation.rotateZ`         | 从 Z 轴顺时针旋转一个角度      |
+-----------------------------------+--------------------------------+
| :func:`Animation.rotateY`         | 从 Y 轴顺时针旋转一个角度      |
+-----------------------------------+--------------------------------+
| :func:`Animation.rotateX`         | 从 X 轴顺时针旋转一个角度      |
+-----------------------------------+--------------------------------+
| :func:`Animation.rotate3d`        | 从 X 轴顺时针旋转一个角度      |
+-----------------------------------+--------------------------------+
| :func:`Animation.rotate`          | 从原点顺时针旋转一个角度       |
+-----------------------------------+--------------------------------+
| :func:`Animation.right`           | 设置 right 值                  |
+-----------------------------------+--------------------------------+
| :func:`Animation.opacity`         | 设置透明度                     |
+-----------------------------------+--------------------------------+
| :func:`Animation.matrix3d`        | 同 transform-function matrix3d |
+-----------------------------------+--------------------------------+
| :func:`Animation.matrix`          | 同 transform-function matrix   |
+-----------------------------------+--------------------------------+
| :func:`Animation.backgroundColor` | 设置背景色                     |
+-----------------------------------+--------------------------------+
| :func:`Animation.left`            | 设置 left 值                   |
+-----------------------------------+--------------------------------+
| :func:`Animation.height`          | 设置高度                       |
+-----------------------------------+--------------------------------+
| :func:`Animation.width`           | 设置宽度                       |
+-----------------------------------+--------------------------------+
| :func:`Animation.export`          | 导出动画队列                   |
+-----------------------------------+--------------------------------+
| :func:`Animation.bottom`          | 设置 bottom 值                 |
+-----------------------------------+--------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   Animation
   Animation.translateZ
   Animation.translateY
   Animation.translateX
   Animation.translate3d
   Animation.translate
   Animation.top
   Animation.step
   Animation.skewY
   Animation.skewX
   Animation.skew
   Animation.scaleZ
   Animation.scaleY
   Animation.scaleX
   Animation.scale3d
   Animation.scale
   Animation.rotateZ
   Animation.rotateY
   Animation.rotateX
   Animation.rotate3d
   Animation.rotate
   Animation.right
   Animation.opacity
   Animation.matrix3d
   Animation.matrix
   Animation.backgroundColor
   Animation.left
   Animation.height
   Animation.width
   Animation.export
   Animation.bottom

置顶
~~~~~~~~~~

+--------------------------+------------------------+
|           名称           |        功能说明        |
+==========================+========================+
| :func:`wx.setTopBarText` | 动态设置置顶栏文字内容 |
+--------------------------+------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.setTopBarText

自定义组件
~~~~~~~~~~

+---------------------+------------------------------------+
|        名称         |              功能说明              |
+=====================+====================================+
| :func:`wx.nextTick` | 延迟一部分操作到下一个时间片再执行 |
+---------------------+------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.nextTick

菜单
~~~~~~~~~~

+--------------------------------------------+----------------------------------------------+
|                    名称                    |                   功能说明                   |
+============================================+==============================================+
| :func:`wx.getMenuButtonBoundingClientRect` | 获取菜单按钮（右上角胶囊按钮）的布局位置信息 |
+--------------------------------------------+----------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.getMenuButtonBoundingClientRect


窗口
~~~~~~~~~~

+----------------------------+--------------------------+
|            名称            |         功能说明         |
+============================+==========================+
| :func:`wx.onWindowResize`  | 监听窗口尺寸变化事件     |
+----------------------------+--------------------------+
| :func:`wx.offWindowResize` | 取消监听窗口尺寸变化事件 |
+----------------------------+--------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.onWindowResize
   wx.offWindowResize



网络
-------

发起请求
~~~~~~~~~~

+--------------------+---------------------+
|        名称        |      功能说明       |
+====================+=====================+
| :func:`wx.request` | 发起 HTTPS 网络请求 |
+--------------------+---------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.request


RequestTask
~~~~~~~~~~~~~~~

+----------------------------------------+------------------------------------+
|                  名称                  |              功能说明              |
+========================================+====================================+
| :func:`RequestTask.abort`              | 中断请求任务                       |
+----------------------------------------+------------------------------------+
| :func:`RequestTask.offHeadersReceived` | 取消监听 HTTP Response Header 事件 |
+----------------------------------------+------------------------------------+
| :func:`RequestTask.onHeadersReceived`  | 监听 HTTP Response Header 事件     |
+----------------------------------------+------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   RequestTask
   RequestTask.abort
   RequestTask.offHeadersReceived
   RequestTask.onHeadersReceived


下载
~~~~~~~~~~

+-------------------------+--------------------+
|          名称           |      功能说明      |
+=========================+====================+
| :func:`wx.downloadFile` | 下载文件资源到本地 |
+-------------------------+--------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.downloadFile


DownloadTask
~~~~~~~~~~~~~~~~~~

+-----------------------------------------+------------------------------------+
|                  名称                   |              功能说明              |
+=========================================+====================================+
| :func:`DownloadTask.abort`              | 中断下载任务                       |
+-----------------------------------------+------------------------------------+
| :func:`DownloadTask.offHeadersReceived` | 取消监听 HTTP Response Header 事件 |
+-----------------------------------------+------------------------------------+
| :func:`DownloadTask.offProgressUpdate`  | 取消监听下载进度变化事件           |
+-----------------------------------------+------------------------------------+
| :func:`DownloadTask.onHeadersReceived`  | 监听 HTTP Response Header 事件     |
+-----------------------------------------+------------------------------------+
| :func:`DownloadTask.onProgressUpdate`   | 监听下载进度变化事件               |
+-----------------------------------------+------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   DownloadTask
   DownloadTask.abort
   DownloadTask.offHeadersReceived
   DownloadTask.offProgressUpdate
   DownloadTask.onHeadersReceived
   DownloadTask.onProgressUpdate


上传
~~~~~~~~~~~~~~~~~~

+-----------------------+------------------------+
|         名称          |        功能说明        |
+=======================+========================+
| :func:`wx.uploadFile` | 将本地资源上传到服务器 |
+-----------------------+------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.uploadFile


UploadTask
~~~~~~~~~~~~~~~~~~

+---------------------------------------+------------------------------------+
|                 名称                  |              功能说明              |
+=======================================+====================================+
| :func:`UploadTask.abort`              | 中断上传任务                       |
+---------------------------------------+------------------------------------+
| :func:`UploadTask.offHeadersReceived` | 取消监听 HTTP Response Header 事件 |
+---------------------------------------+------------------------------------+
| :func:`UploadTask.offProgressUpdate`  | 取消监听上传进度变化事件           |
+---------------------------------------+------------------------------------+
| :func:`UploadTask.onHeadersReceived`  | 监听 HTTP Response Header 事件     |
+---------------------------------------+------------------------------------+
| :func:`UploadTask.onProgressUpdate`   | 监听上传进度变化事件               |
+---------------------------------------+------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   UploadTask
   UploadTask.abort
   UploadTask.offHeadersReceived
   UploadTask.offProgressUpdate
   UploadTask.onHeadersReceived
   UploadTask.onProgressUpdate


WebSocket
~~~~~~~~~~~~~~~~~~

+------------------------------+---------------------------------------+
|             名称             |               功能说明                |
+==============================+=======================================+
| :func:`wx.sendSocketMessage` | 通过 WebSocket 连接发送数据           |
+------------------------------+---------------------------------------+
| :func:`wx.onSocketOpen`      | 监听 WebSocket 连接打开事件           |
+------------------------------+---------------------------------------+
| :func:`wx.onSocketMessage`   | 监听 WebSocket 接受到服务器的消息事件 |
+------------------------------+---------------------------------------+
| :func:`wx.onSocketError`     | 监听 WebSocket 错误事件               |
+------------------------------+---------------------------------------+
| :func:`wx.onSocketClose`     | 监听 WebSocket 连接关闭事件           |
+------------------------------+---------------------------------------+
| :func:`wx.connectSocket`     | 创建一个 WebSocket 连接               |
+------------------------------+---------------------------------------+
| :func:`wx.closeSocket`       | 关闭 WebSocket 连接                   |
+------------------------------+---------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.sendSocketMessage
   wx.onSocketOpen
   wx.onSocketMessage
   wx.onSocketError
   wx.onSocketClose
   wx.connectSocket
   wx.closeSocket

SocketTask
~~~~~~~~~~~~~~~~~~

+------------------------------+---------------------------------------+
|             名称             |               功能说明                |
+==============================+=======================================+
| :func:`SocketTask.close`     | 关闭 WebSocket 连接                   |
+------------------------------+---------------------------------------+
| :func:`SocketTask.onClose`   | 监听 WebSocket 连接关闭事件           |
+------------------------------+---------------------------------------+
| :func:`SocketTask.onError`   | 监听 WebSocket 错误事件               |
+------------------------------+---------------------------------------+
| :func:`SocketTask.onMessage` | 监听 WebSocket 接受到服务器的消息事件 |
+------------------------------+---------------------------------------+
| :func:`SocketTask.onOpen`    | 监听 WebSocket 连接打开事件           |
+------------------------------+---------------------------------------+
| :func:`SocketTask.send`      | 通过 WebSocket 连接发送数据           |
+------------------------------+---------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   SocketTask
   SocketTask.close
   SocketTask.onClose
   SocketTask.onError
   SocketTask.onMessage
   SocketTask.onOpen
   SocketTask.send

mDNS
~~~~~~~~~~~~~~~~~~

+-----------------------------------------+----------------------------------+
|                  名称                   |             功能说明             |
+=========================================+==================================+
| :func:`wx.stopLocalServiceDiscovery`    | 停止搜索 mDNS 服务               |
+-----------------------------------------+----------------------------------+
| :func:`wx.startLocalServiceDiscovery`   | 开始搜索局域网下的 mDNS 服务     |
+-----------------------------------------+----------------------------------+
| :func:`wx.onLocalServiceResolveFail`    | 监听 mDNS 服务解析失败的事件     |
+-----------------------------------------+----------------------------------+
| :func:`wx.onLocalServiceLost`           | 监听 mDNS 服务离开的事件         |
+-----------------------------------------+----------------------------------+
| :func:`wx.onLocalServiceFound`          | 监听 mDNS 服务发现的事件         |
+-----------------------------------------+----------------------------------+
| :func:`wx.onLocalServiceDiscoveryStop`  | 监听 mDNS 服务停止搜索的事件     |
+-----------------------------------------+----------------------------------+
| :func:`wx.offLocalServiceResolveFail`   | 取消监听 mDNS 服务解析失败的事件 |
+-----------------------------------------+----------------------------------+
| :func:`wx.offLocalServiceLost`          | 取消监听 mDNS 服务离开的事件     |
+-----------------------------------------+----------------------------------+
| :func:`wx.offLocalServiceFound`         | 取消监听 mDNS 服务发现的事件     |
+-----------------------------------------+----------------------------------+
| :func:`wx.offLocalServiceDiscoveryStop` | 取消监听 mDNS 服务停止搜索的事件 |
+-----------------------------------------+----------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.stopLocalServiceDiscovery
   wx.startLocalServiceDiscovery
   wx.onLocalServiceResolveFail
   wx.onLocalServiceLost
   wx.onLocalServiceFound
   wx.onLocalServiceDiscoveryStop
   wx.offLocalServiceResolveFail
   wx.offLocalServiceLost
   wx.offLocalServiceFound
   wx.offLocalServiceDiscoveryStop

UDP 通信
~~~~~~~~~~~~~~~~~~

.. toctree::
   :maxdepth: 1
   :hidden:

   UDPSocket

+--------------------------------+----------------------------------+
|              名称              |             功能说明             |
+================================+==================================+
| :func:`wx.createUDPSocket`     | 创建一个 UDP Socket 实例         |
+--------------------------------+----------------------------------+
| :class:`UDPSocket`             |                                  |
+--------------------------------+----------------------------------+
| :func:`UDPSocket.bind`         | 绑定一个系统随机分配的可用端口   |
+--------------------------------+----------------------------------+
| :func:`UDPSocket.close`        | 关闭 UDP Socket 实例，相当于销毁 |
+--------------------------------+----------------------------------+
| :func:`UDPSocket.offClose`     | 取消监听关闭事件                 |
+--------------------------------+----------------------------------+
| :func:`UDPSocket.offError`     | 取消监听错误事件                 |
+--------------------------------+----------------------------------+
| :func:`UDPSocket.offListening` | 取消监听开始监听数据包消息的事件 |
+--------------------------------+----------------------------------+
| :func:`UDPSocket.offMessage`   | 取消监听收到消息的事件           |
+--------------------------------+----------------------------------+
| :func:`UDPSocket.onClose`      | 监听关闭事件                     |
+--------------------------------+----------------------------------+
| :func:`UDPSocket.onError`      | 监听错误事件                     |
+--------------------------------+----------------------------------+
| :func:`UDPSocket.onListening`  | 监听开始监听数据包消息的事件     |
+--------------------------------+----------------------------------+
| :func:`UDPSocket.onMessage`    | 监听收到消息的事件               |
+--------------------------------+----------------------------------+
| :func:`UDPSocket.send`         | 向指定的 IP 和 port 发送消息     |
+--------------------------------+----------------------------------+


数据缓存
---------

+-------------------------------+-------------------------------------+
|             名称              |              功能说明               |
+===============================+=====================================+
| :func:`wx.setStorageSync`     | :func:`wx.setStorage` 的同步版本            |
+-------------------------------+-------------------------------------+
| :func:`wx.setStorage`         | 将数据存储在本地缓存中指定的 key 中 |
+-------------------------------+-------------------------------------+
| :func:`wx.removeStorageSync`  | :func:`wx.removeStorage` 的同步版本         |
+-------------------------------+-------------------------------------+
| :func:`wx.removeStorage`      | 从本地缓存中移除指定 key            |
+-------------------------------+-------------------------------------+
| :func:`wx.getStorageSync`     | :func:`wx.getStorage` 的同步版本            |
+-------------------------------+-------------------------------------+
| :func:`wx.getStorageInfoSync` | :func:`wx.getStorageInfo` 的同步版本        |
+-------------------------------+-------------------------------------+
| :func:`wx.getStorageInfo`     | 异步获取当前storage的相关信息       |
+-------------------------------+-------------------------------------+
| :func:`wx.getStorage`         | 从本地缓存中异步获取指定 key 的内容 |
+-------------------------------+-------------------------------------+
| :func:`wx.clearStorageSync`   | :func:`wx.clearStorage` 的同步版本          |
+-------------------------------+-------------------------------------+
| :func:`wx.clearStorage`       | 清理本地数据缓存                    |
+-------------------------------+-------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.setStorage
   wx.setStorageSync
   wx.removeStorage
   wx.removeStorageSync
   wx.getStorage
   wx.getStorageSync
   wx.getStorageInfo
   wx.getStorageInfoSync
   wx.clearStorage
   wx.clearStorageSync

媒体
-------

地图
~~~~~~~~~~~~~~~~~~

.. toctree::
   :maxdepth: 1
   :hidden:

   MapContext

+--------------------------------------+---------------------------------+
|                 名称                 |            功能说明             |
+======================================+=================================+
| :func:`wx.createMapContext`          | 创建 map 上下文 MapContext 对象 |
+--------------------------------------+---------------------------------+
| :func:`MapContext`                   | MapContext 对象                 |
+--------------------------------------+---------------------------------+
| :func:`MapContext.getCenterLocation` | 获取当前地图中心的经纬度        |
+--------------------------------------+---------------------------------+
| :func:`MapContext.getRegion`         | 获取当前地图的视野范围          |
+--------------------------------------+---------------------------------+
| :func:`MapContext.getScale`          | 获取当前地图的缩放级别          |
+--------------------------------------+---------------------------------+
| :func:`MapContext.includePoints`     | 缩放视野展示所有经纬度          |
+--------------------------------------+---------------------------------+
| :func:`MapContext.moveToLocation`    | 将地图中心移动到当前定位点      |
+--------------------------------------+---------------------------------+
| :func:`MapContext.translateMarker`   | 平移marker，带动画              |
+--------------------------------------+---------------------------------+


图片
~~~~~~~~~~~~~~~~~~

+-----------------------------------+----------------------------------+
|               名称                |             功能说明             |
+===================================+==================================+
| :func:`wx.saveImageToPhotosAlbum` | 保存图片到系统相册               |
+-----------------------------------+----------------------------------+
| :func:`wx.previewImage`           | 在新页面中全屏预览图片           |
+-----------------------------------+----------------------------------+
| :func:`wx.getImageInfo`           | 获取图片信息                     |
+-----------------------------------+----------------------------------+
| :func:`wx.compressImage`          | 压缩图片接口，可选压缩质量       |
+-----------------------------------+----------------------------------+
| :func:`wx.chooseMessageFile`      | 从客户端会话选择文件             |
+-----------------------------------+----------------------------------+
| :func:`wx.chooseImage`            | 从本地相册选择图片或使用相机拍照 |
+-----------------------------------+----------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.saveImageToPhotosAlbum
   wx.previewImage
   wx.getImageInfo
   wx.compressImage
   wx.chooseMessageFile
   wx.chooseImage

视频
~~~~~~~~~~~~~~~~~~

+----------------------------------------+-------------------------------------+
|                  名称                  |              功能说明               |
+========================================+=====================================+
| :func:`wx.saveVideoToPhotosAlbum`      | 保存视频到系统相册                  |
+----------------------------------------+-------------------------------------+
| :func:`wx.chooseVideo`                 | 拍摄视频或从手机相册中选视频        |
+----------------------------------------+-------------------------------------+
| :func:`wx.createVideoContext`          | 创建 video 上下文 VideoContext 对象 |
+----------------------------------------+-------------------------------------+
| :class:`VideoContext`                  | 通过 wx.createVideoContext() 获取   |
+----------------------------------------+-------------------------------------+
| :func:`VideoContext.seek`              | 跳转到指定位置                      |
+----------------------------------------+-------------------------------------+
| :func:`VideoContext.exitFullScreen`    | 退出全屏                            |
+----------------------------------------+-------------------------------------+
| :func:`VideoContext.hideStatusBar`     | 隐藏状态栏，仅在iOS全屏下有效       |
+----------------------------------------+-------------------------------------+
| :func:`VideoContext.pause`             | 暂停视频                            |
+----------------------------------------+-------------------------------------+
| :func:`VideoContext.play`              | 播放视频                            |
+----------------------------------------+-------------------------------------+
| :func:`VideoContext.playbackRate`      | 设置倍速播放                        |
+----------------------------------------+-------------------------------------+
| :func:`VideoContext.requestFullScreen` | 进入全屏                            |
+----------------------------------------+-------------------------------------+
| :func:`VideoContext.sendDanmu`         | 发送弹幕                            |
+----------------------------------------+-------------------------------------+
| :func:`VideoContext.showStatusBar`     | 显示状态栏，仅在iOS全屏下有效       |
+----------------------------------------+-------------------------------------+
| :func:`VideoContext.stop`              | 停止视频                            |
+----------------------------------------+-------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.saveVideoToPhotosAlbum
   wx.chooseVideo
   VideoContext

音频
~~~~~~~~~~~~~~~~~~

+-----------------------------------------+----------------------------------------------+
|                  名称                   |                   功能说明                   |
+=========================================+==============================================+
| :func:`wx.getAvailableAudioSources`     | 获取当前支持的音频输入源                     |
+-----------------------------------------+----------------------------------------------+
| :func:`wx.createInnerAudioContext`      | 创建内部 audio 上下文 InnerAudioContext 对象 |
+-----------------------------------------+----------------------------------------------+
| :func:`wx.setInnerAudioOption`          | 设置 InnerAudioContext 的播放选项            |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.destroy`       | 销毁当前实例                                 |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.offCanplay`    | 取消监听音频进入可以播放状态的事件           |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.offEnded`      | 取消监听音频自然播放至结束的事件             |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.offError`      | 取消监听音频播放错误事件                     |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.offPause`      | 取消监听音频暂停事件                         |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.offPlay`       | 取消监听音频播放事件                         |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.offSeeked`     | 取消监听音频完成跳转操作的事件               |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.offSeeking`    | 取消监听音频进行跳转操作的事件               |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.offStop`       | 取消监听音频停止事件                         |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.offTimeUpdate` | 取消监听音频播放进度更新事件                 |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.offWaiting`    | 取消监听音频加载中事件                       |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.onCanplay`     | 监听音频进入可以播放状态的事件               |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.onEnded`       | 监听音频自然播放至结束的事件                 |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.onError`       | 监听音频播放错误事件                         |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.onPause`       | 监听音频暂停事件                             |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.onPlay`        | 监听音频播放事件                             |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.onSeeked`      | 监听音频完成跳转操作的事件                   |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.onSeeking`     | 监听音频进行跳转操作的事件                   |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.onStop`        | 监听音频停止事件                             |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.onTimeUpdate`  | 监听音频播放进度更新事件                     |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.onWaiting`     | 监听音频加载中事件                           |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.pause`         | 暂停                                         |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.play`          | 播放                                         |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.seek`          | 跳转到指定位置                               |
+-----------------------------------------+----------------------------------------------+
| :func:`InnerAudioContext.stop`          | 停止                                         |
+-----------------------------------------+----------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.setInnerAudioOption
   wx.getAvailableAudioSources
   InnerAudioContext

背景音频
~~~~~~~~~

.. toctree::
   :maxdepth: 1
   :hidden:

   BackgroundAudioManager

+---------------------------------------------+---------------------------------------------------+
|                    名称                     |                     功能说明                      |
+=============================================+===================================================+
| :func:`wx.getBackgroundAudioManager`        | 获取全局唯一的背景音频管理器                      |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager`              | 全局唯一的背景音频管理器                          |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onCanplay`    | 监听背景音频进入可播放状态事件                    |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onEnded`      | 监听背景音频自然播放结束事件                      |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onError`      | 监听背景音频播放错误事件                          |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onNext`       | 监听用户在系统音乐播放面板点击下一曲事件（仅iOS） |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onPause`      | 监听背景音频暂停事件                              |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onPlay`       | 监听背景音频播放事件                              |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onPrev`       | 监听用户在系统音乐播放面板点击上一曲事件（仅iOS） |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onSeeked`     | 监听背景音频完成跳转操作事件                      |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onSeeking`    | 监听背景音频开始跳转操作事件                      |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onStop`       | 监听背景音频停止事件                              |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onTimeUpdate` | 监听背景音频播放进度更新事件                      |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.onWaiting`    | 监听音频加载中事件                                |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.pause`        | 暂停音乐                                          |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.play`         | 播放音乐                                          |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.seek`         | 跳转到指定位置                                    |
+---------------------------------------------+---------------------------------------------------+
| :func:`BackgroundAudioManager.stop`         | 停止音乐                                          |
+---------------------------------------------+---------------------------------------------------+

实时音视频
~~~~~~~~~~~~~~~~~~

.. toctree::
   :maxdepth: 1
   :hidden:

   LivePusherContext
   LivePlayerContext

.. table:: LivePusherContext

  +----------------------------------------+------------------------------------------------+
  |                  名称                  |                    功能说明                    |
  +========================================+================================================+
  | :func:`wx.createLivePusherContext`     | 创建 live-pusher 上下文 LivePusherContext 对象 |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.pause`        | 暂停推流                                       |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.pauseBGM`     | 暂停背景音                                     |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.playBGM`      | 播放背景音                                     |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.resume`       | 恢复推流                                       |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.resumeBGM`    | 恢复背景音                                     |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.setBGMVolume` | 设置背景音音量                                 |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.snapshot`     | 快照                                           |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.start`        | 播放推流                                       |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.stop`         | 停止推流                                       |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.stopBGM`      | 停止背景音                                     |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.switchCamera` | 切换前后摄像头                                 |
  +----------------------------------------+------------------------------------------------+
  | :func:`LivePusherContext.toggleTorch`  | 切换                                           |
  +----------------------------------------+------------------------------------------------+

.. table:: LivePlayerContext

  +---------------------------------------------+------------------------------------------------+
  |                    名称                     |                    功能说明                    |
  +=============================================+================================================+
  | :func:`wx.createLivePlayerContext`          | 创建 live-player 上下文 LivePlayerContext 对象 |
  +---------------------------------------------+------------------------------------------------+
  | :func:`LivePlayerContext.exitFullScreen`    | 退出全屏                                       |
  +---------------------------------------------+------------------------------------------------+
  | :func:`LivePlayerContext.mute`              | 静音                                           |
  +---------------------------------------------+------------------------------------------------+
  | :func:`LivePlayerContext.pause`             | 暂停                                           |
  +---------------------------------------------+------------------------------------------------+
  | :func:`LivePlayerContext.play`              | 播放                                           |
  +---------------------------------------------+------------------------------------------------+
  | :func:`LivePlayerContext.requestFullScreen` | 进入全屏                                       |
  +---------------------------------------------+------------------------------------------------+
  | :func:`LivePlayerContext.resume`            | 恢复                                           |
  +---------------------------------------------+------------------------------------------------+
  | :func:`LivePlayerContext.stop`              | 停止                                           |
  +---------------------------------------------+------------------------------------------------+

录音 RecorderManager
~~~~~~~~~~~~~~~~~~~~~

+---------------------------------------------+------------------------------------------+
|                    名称                     |                 功能说明                 |
+=============================================+==========================================+
| :func:`wx.getRecorderManager`               | 获取全局唯一的录音管理器 RecorderManager |
+---------------------------------------------+------------------------------------------+
| :class:`RecorderManager`                    |                                          |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.onError`             | 监听录音错误事件                         |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.onFrameRecorded`     | 监听已录制完指定帧大小的文件事件         |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.onInterruptionBegin` | 监听录音因为受到系统占用而被中断开始事件 |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.onInterruptionEnd`   | 监听录音中断结束事件                     |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.onPause`             | 监听录音暂停事件                         |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.onResume`            | 监听录音继续事件                         |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.onStart`             | 监听录音开始事件                         |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.onStop`              | 监听录音结束事件                         |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.pause`               | 暂停录音                                 |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.resume`              | 继续录音                                 |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.start`               | 开始录音                                 |
+---------------------------------------------+------------------------------------------+
| :func:`RecorderManager.stop`                | 停止录音                                 |
+---------------------------------------------+------------------------------------------+
| :func:`wx.stopRecord`                       | 停止录音 .. deprecated:: 1.6.0           |
+---------------------------------------------+------------------------------------------+
| :func:`wx.startRecord`                      | 开始录音 .. deprecated :: 1.6.0          |
+---------------------------------------------+------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   RecorderManager

相机 CameraContext
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

+-----------------------------------+---------------------------------------+
|               名称                |               功能说明                |
+===================================+=======================================+
| :func:`wx.createCameraContext`    | 创建 camera 上下文 CameraContext 对象 |
+-----------------------------------+---------------------------------------+
| :class:`CameraContext`            | CameraContext 实例                    |
+-----------------------------------+---------------------------------------+
| :func:`CameraContext.startRecord` | 开始录像                              |
+-----------------------------------+---------------------------------------+
| :func:`CameraContext.stopRecord`  | 结束录像                              |
+-----------------------------------+---------------------------------------+
| :func:`CameraContext.takePhoto`   | 拍摄照片                              |
+-----------------------------------+---------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   CameraContext

富文本
~~~~~~~~~~~~~~~~

+-------------------------------------+-------------------------------------------------------------------+
|                名称                 |                             功能说明                              |
+=====================================+===================================================================+
| :class:`EditorContext`              |                                                                   |
+-------------------------------------+-------------------------------------------------------------------+
| :func:`EditorContext.clear`         | 清空编辑器内容                                                    |
+-------------------------------------+-------------------------------------------------------------------+
| :func:`EditorContext.format`        | 修改样式                                                          |
+-------------------------------------+-------------------------------------------------------------------+
| :func:`EditorContext.getContents`   | 获取编辑器内容                                                    |
+-------------------------------------+-------------------------------------------------------------------+
| :func:`EditorContext.insertDivider` | 插入分割线                                                        |
+-------------------------------------+-------------------------------------------------------------------+
| :func:`EditorContext.insertImage`   | 插入图片                                                          |
+-------------------------------------+-------------------------------------------------------------------+
| :func:`EditorContext.insertText`    | 覆盖当前选区，设置一段文本                                        |
+-------------------------------------+-------------------------------------------------------------------+
| :func:`EditorContext.redo`          | 恢复                                                              |
+-------------------------------------+-------------------------------------------------------------------+
| :func:`EditorContext.removeFormat`  | 清除当前选区的样式                                                |
+-------------------------------------+-------------------------------------------------------------------+
| :func:`EditorContext.setContents`   | 初始化编辑器内容，html 和 `delta`_ 同时存在时仅 `delta`_ api 生效 |
+-------------------------------------+-------------------------------------------------------------------+
| :func:`EditorContext.undo`          | 撤销                                                              |
+-------------------------------------+-------------------------------------------------------------------+

.. _delta: https://wdk-docs.github.io/delta/

.. toctree::
   :maxdepth: 1
   :hidden:

   EditorContext

位置
-------

+---------------------------+--------------------------+
|           名称            |         功能说明         |
+===========================+==========================+
| :func:`wx.openLocation`   | 使用微信内置地图查看位置 |
+---------------------------+--------------------------+
| :func:`wx.getLocation`    | 获取当前的地理位置、速度 |
+---------------------------+--------------------------+
| :func:`wx.chooseLocation` | 打开地图选择位置         |
+---------------------------+--------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.openLocation
   wx.getLocation
   wx.chooseLocation


转发
-------

+----------------------------+------------------------+
|            名称            |        功能说明        |
+============================+========================+
| :func:`wx.updateShareMenu` | 更新转发属性           |
+----------------------------+------------------------+
| :func:`wx.showShareMenu`   | 显示当前页面的转发按钮 |
+----------------------------+------------------------+
| :func:`wx.hideShareMenu`   | 隐藏转发按钮           |
+----------------------------+------------------------+
| :func:`wx.getShareInfo`    | 获取转发详细信息       |
+----------------------------+------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.updateShareMenu
   wx.showShareMenu
   wx.hideShareMenu
   wx.getShareInfo

画布
-------

+---------------------------------+------------------------------------------------+
| 名称                            | 功能说明                                       |
+---------------------------------+------------------------------------------------+
| :func:`wx.createCanvasContext`  | 创建 canvas 的绘图上下文 CanvasContext 对象    |
+---------------------------------+------------------------------------------------+
| :func:`wx.canvasToTempFilePath` | 把当前画布指定区域的内容导出生成指定大小的图片 |
+---------------------------------+------------------------------------------------+
| :func:`wx.canvasPutImageData`   | 将像素数据绘制到画布                           |
+---------------------------------+------------------------------------------------+
| :func:`wx.canvasGetImageData`   | 获取 canvas 区域隐含的像素数据                 |
+---------------------------------+------------------------------------------------+
| :ref:`Color`                    | 颜色                                           |
+---------------------------------+------------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   CanvasContext
   wx.createCanvasContext
   wx.canvasToTempFilePath
   wx.canvasPutImageData
   wx.canvasGetImageData
   Color

CanvasGradient
~~~~~~~~~~~~~~~~~~

+-----------------------------+------------------+
|            名称             |     功能说明     |
+=============================+==================+
| CanvasGradient.addColorStop | 添加颜色的渐变点 |
+-----------------------------+------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   CanvasGradient
   CanvasGradient.addColorStop

CanvasContext
~~~~~~~~~~~~~~~~~~

+----------------------------------------------+--------------------------------------------------------------+
| 名称                                         | 功能说明                                                     |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.arc`                    | 创建一条弧线                                                 |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.arcTo`                  | 根据控制点和半径绘制圆弧路径                                 |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.beginPath`              | 开始创建一个路径                                             |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.bezierCurveTo`          | 创建三次方贝塞尔曲线路径                                     |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.clearRect`              | 清除画布上在该矩形区域内的内容                               |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.clip`                   | 从原始画布中剪切任意形状和尺寸                               |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.closePath`              | 关闭一个路径                                                 |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.createCircularGradient` | 创建一个圆形的渐变颜色                                       |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.createLinearGradient`   | 创建一个线性的渐变颜色                                       |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.createPattern`          | 对指定的图像创建模式的方法，可在指定的方向上重复元图像       |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.draw`                   | 将之前在绘图上下文中的描述（路径、变形、样式）画到 canvas 中 |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.drawImage`              | 绘制图像到画布                                               |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.fill`                   | 对当前路径中的内容进行填充                                   |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.fillRect`               | 填充一个矩形                                                 |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.fillText`               | 在画布上绘制被填充的文本                                     |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.lineTo`                 | 增加一个新点，然后创建一条从上次指定点到目标点的线           |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.measureText`            | 测量文本尺寸信息                                             |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.moveTo`                 | 把路径移动到画布中的指定点，不创建线条                       |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.quadraticCurveTo`       | 创建二次贝塞尔曲线路径                                       |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.rect`                   | 创建一个矩形路径                                             |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.restore`                | 恢复之前保存的绘图上下文                                     |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.rotate`                 | 以原点为中心顺时针旋转当前坐标轴                             |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.save`                   | 保存绘图上下文                                               |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.scale`                  | 在调用后，之后创建的路径其横纵坐标会被缩放                   |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setFillStyle`           | 设置填充色                                                   |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setFontSize`            | 设置字体的字号                                               |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setGlobalAlpha`         | 设置全局画笔透明度                                           |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setLineCap`             | 设置线条的端点样式                                           |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setLineDash`            | 设置虚线样式                                                 |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setLineJoin`            | 设置线条的交点样式                                           |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setLineWidth`           | 设置线条的宽度                                               |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setMiterLimit`          | 设置最大斜接长度                                             |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setShadow`              | 设定阴影样式                                                 |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setStrokeStyle`         | 设置描边颜色                                                 |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setTextAlign`           | 设置文字的对齐                                               |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setTextBaseline`        | 设置文字的竖直对齐                                           |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.setTransform`           | 使用矩阵重新设置（覆盖）当前变换的方法                       |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.stroke`                 | 画出当前路径的边框                                           |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.strokeRect`             | 画一个矩形(非填充)                                           |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.strokeText`             | 给定的 (x, y) 位置绘制文本描边的方法                         |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.transform`              | 使用矩阵多次叠加当前变换的方法                               |
+----------------------------------------------+--------------------------------------------------------------+
| :func:`CanvasContext.translate`              | 对当前坐标系的原点 (0, 0) 进行变换                           |
+----------------------------------------------+--------------------------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   CanvasContext.arc
   CanvasContext.arcTo
   CanvasContext.beginPath
   CanvasContext.bezierCurveTo
   CanvasContext.clearRect
   CanvasContext.clip
   CanvasContext.closePath
   CanvasContext.createCircularGradient
   CanvasContext.createLinearGradient
   CanvasContext.createPattern
   CanvasContext.draw
   CanvasContext.drawImage
   CanvasContext.fill
   CanvasContext.fillRect
   CanvasContext.fillText
   CanvasContext.lineTo
   CanvasContext.measureText
   CanvasContext.moveTo
   CanvasContext.quadraticCurveTo
   CanvasContext.rect
   CanvasContext.restore
   CanvasContext.rotate
   CanvasContext.save
   CanvasContext.scale
   CanvasContext.setFillStyle
   CanvasContext.setFontSize
   CanvasContext.setGlobalAlpha
   CanvasContext.setLineCap
   CanvasContext.setLineDash
   CanvasContext.setLineJoin
   CanvasContext.setLineWidth
   CanvasContext.setMiterLimit
   CanvasContext.setShadow
   CanvasContext.setStrokeStyle
   CanvasContext.setTextAlign
   CanvasContext.setTextBaseline
   CanvasContext.setTransform
   CanvasContext.stroke
   CanvasContext.strokeRect
   CanvasContext.strokeText
   CanvasContext.transform
   CanvasContext.translate

文件
-------

+---------------------------------+----------------------------------------+
|              名称               |                功能说明                |
+=================================+========================================+
| :func:`wx.saveFile`             | 保存文件到本地                         |
+---------------------------------+----------------------------------------+
| :func:`wx.removeSavedFile`      | 删除本地缓存文件                       |
+---------------------------------+----------------------------------------+
| :func:`wx.openDocument`         | 新开页面打开文档                       |
+---------------------------------+----------------------------------------+
| :func:`wx.getSavedFileList`     | 获取该小程序下已保存的本地缓存文件列表 |
+---------------------------------+----------------------------------------+
| :func:`wx.getSavedFileInfo`     | 获取本地文件的文件信息                 |
+---------------------------------+----------------------------------------+
| :func:`wx.getFileSystemManager` | 获取全局唯一的文件管理器               |
+---------------------------------+----------------------------------------+
| :func:`wx.getFileInfo`          | 获取文件信息                           |
+---------------------------------+----------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.saveFile
   wx.removeSavedFile
   wx.openDocument
   wx.getSavedFileList
   wx.getSavedFileInfo
   wx.getFileSystemManager
   wx.getFileInfo

Stats
~~~~~~~~~~~~~~~~~~

+---------------------------+------------------------------+
|           名称            |           功能说明           |
+===========================+==============================+
| :func:`Stats.isDirectory` | 判断当前文件是否一个目录     |
+---------------------------+------------------------------+
| :func:`Stats.isFile`      | 判断当前文件是否一个普通文件 |
+---------------------------+------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   Stats
   Stats.isDirectory
   Stats.isFile

FileSystemManager
~~~~~~~~~~~~~~~~~~

+--------------------------------------------+----------------------------------------------------+
|                    名称                    |                      功能说明                      |
+============================================+====================================================+
| :func:`FileSystemManager.access`           | 判断文件/目录是否存在                              |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.accessSync`       | :func:`FileSystemManager.access` 的同步版本        |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.appendFile`       | 在文件结尾追加内容                                 |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.appendFileSync`   | :func:`FileSystemManager.appendFile` 的同步版本    |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.copyFile`         | 复制文件                                           |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.copyFileSync`     | :func:`FileSystemManager.copyFile` 的同步版本      |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.getFileInfo`      | 获取该小程序下的 本地临时文件 或 本地缓存文件 信息 |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.getSavedFileList` | 获取该小程序下已保存的本地缓存文件列表             |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.mkdir`            | 创建目录                                           |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.mkdirSync`        | :func:`FileSystemManager.mkdir` 的同步版本         |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.readdir`          | 读取目录内文件列表                                 |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.readdirSync`      | :func:`FileSystemManager.readdir` 的同步版本       |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.readFile`         | 读取本地文件内容                                   |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.readFileSync`     | :func:`FileSystemManager.readFile` 的同步版本      |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.removeSavedFile`  | 删除该小程序下已保存的本地缓存文件                 |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.rename`           | 重命名文件                                         |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.renameSync`       | :func:`FileSystemManager.rename` 的同步版本        |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.rmdir`            | 删除目录                                           |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.rmdirSync`        | :func:`FileSystemManager.rmdir` 的同步版本         |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.saveFile`         | 保存临时文件到本地                                 |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.saveFileSync`     | :func:`FileSystemManager.saveFile` 的同步版本      |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.stat`             | 获取文件 Stats 对象                                |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.statSync`         | :func:`FileSystemManager.stat` 的同步版本          |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.unlink`           | 删除文件                                           |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.unlinkSync`       | :func:`FileSystemManager.unlink` 的同步版本        |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.unzip`            | 解压文件                                           |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.writeFile`        | 写文件                                             |
+--------------------------------------------+----------------------------------------------------+
| :func:`FileSystemManager.writeFileSync`    | :func:`FileSystemManager.writeFile` 的同步版本     |
+--------------------------------------------+----------------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   FileSystemManager
   FileSystemManager.access
   FileSystemManager.accessSync
   FileSystemManager.appendFile
   FileSystemManager.appendFileSync
   FileSystemManager.copyFile
   FileSystemManager.copyFileSync
   FileSystemManager.getFileInfo
   FileSystemManager.getSavedFileList
   FileSystemManager.mkdir
   FileSystemManager.mkdirSync
   FileSystemManager.readdir
   FileSystemManager.readdirSync
   FileSystemManager.readFile
   FileSystemManager.readFileSync
   FileSystemManager.removeSavedFile
   FileSystemManager.rename
   FileSystemManager.renameSync
   FileSystemManager.rmdir
   FileSystemManager.rmdirSync
   FileSystemManager.saveFile
   FileSystemManager.saveFileSync
   FileSystemManager.stat
   FileSystemManager.statSync
   FileSystemManager.unlink
   FileSystemManager.unlinkSync
   FileSystemManager.unzip
   FileSystemManager.writeFile
   FileSystemManager.writeFileSync

开放接口
-----------

登录
~~~~~~~~~~~~~~~~~~

+-------------------------+------------------------------+
|          名称           |           功能说明           |
+=========================+==============================+
| :func:`wx.login`        | 调用接口获取登录凭证（code） |
+-------------------------+------------------------------+
| :func:`wx.checkSession` | 检查登录态是否过期           |
+-------------------------+------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.login
   wx.checkSession


小程序跳转
~~~~~~~~~~~~~~~~~~

+------------------------------------+--------------------+
|                名称                |      功能说明      |
+====================================+====================+
| :func:`wx.navigateToMiniProgram`   | 打开另一个小程序   |
+------------------------------------+--------------------+
| :func:`wx.navigateBackMiniProgram` | 返回到上一个小程序 |
+------------------------------------+--------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.navigateToMiniProgram
   wx.navigateBackMiniProgram

帐号信息
~~~~~~~~~~~~~~~~~~

+-------------------------------+------------------+
|             名称              |     功能说明     |
+===============================+==================+
| :func:`wx.getAccountInfoSync` | 获取当前帐号信息 |
+-------------------------------+------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.getAccountInfoSync

用户信息
~~~~~~~~~~~~~~~~~~

+------------------------+--------------+
|          名称          |   功能说明   |
+========================+==============+
| :func:`wx.getUserInfo` | 获取用户信息 |
+------------------------+--------------+
| :class:`UserInfo`      | 用户信息     |
+------------------------+--------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.getUserInfo
   UserInfo

数据上报
~~~~~~~~~~~~~~~~~~

+--------------------------+----------------------------+
|           名称           |          功能说明          |
+==========================+============================+
| :func:`wx.reportMonitor` | 自定义业务数据监控上报接口 |
+--------------------------+----------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.reportMonitor

数据分析
~~~~~~~~~~~~~~~~~~

+----------------------------+------------------------+
|            名称            |        功能说明        |
+============================+========================+
| :func:`wx.reportAnalytics` | 自定义分析数据上报接口 |
+----------------------------+------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.reportAnalytics

支付
~~~~~~~~~~~~~~~~~~

+---------------------------+--------------+
|           名称            |   功能说明   |
+===========================+==============+
| :func:`wx.requestPayment` | 发起微信支付 |
+---------------------------+--------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.requestPayment

授权
~~~~~~~~~~~~~~~~~~

+----------------------+------------------------+
|         名称         |        功能说明        |
+======================+========================+
| :func:`wx.authorize` | 提前向用户发起授权请求 |
+----------------------+------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.authorize

设置
~~~~~~~~~~~~~~~~~~

+------------------------+--------------------------------------------------+
|          名称          |                     功能说明                     |
+========================+==================================================+
| :func:`wx.openSetting` | 调起客户端小程序设置界面，返回用户设置的操作结果 |
+------------------------+--------------------------------------------------+
| :func:`wx.getSetting`  | 获取用户的当前设置                               |
+------------------------+--------------------------------------------------+
| :func:`AuthSetting`    | 用户授权设置信息，详情参考权限                   |
+------------------------+--------------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.openSetting
   wx.getSetting
   AuthSetting

收货地址
~~~~~~~~~~~~~~~~~~

+--------------------------+------------------+
|           名称           |     功能说明     |
+==========================+==================+
| :func:`wx.chooseAddress` | 获取用户收货地址 |
+--------------------------+------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.chooseAddress

卡券
~~~~~~~~~~~~~~~~~~

+---------------------+----------------------+
|        名称         |       功能说明       |
+=====================+======================+
| :func:`wx.openCard` | 查看微信卡包中的卡券 |
+---------------------+----------------------+
| :func:`wx.addCard`  | 批量添加卡券         |
+---------------------+----------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.openCard
   wx.addCard

发票
~~~~~~~~~~~~~~~~~~

+-------------------------------+--------------------+
|             名称              |      功能说明      |
+===============================+====================+
| :func:`wx.chooseInvoiceTitle` | 选择用户的发票抬头 |
+-------------------------------+--------------------+
| :func:`wx.chooseInvoice`      | 选择用户已有的发票 |
+-------------------------------+--------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.chooseInvoiceTitle
   wx.chooseInvoice

生物认证
~~~~~~~~~~~~~~~~~~

+----------------------------------------------+------------------------------------------+
|                     名称                     |                 功能说明                 |
+==============================================+==========================================+
| :func:`wx.startSoterAuthentication`          | 开始 SOTER 生物认证                      |
+----------------------------------------------+------------------------------------------+
| :func:`wx.checkIsSupportSoterAuthentication` | 获取本机支持的 SOTER 生物认证方式        |
+----------------------------------------------+------------------------------------------+
| :func:`wx.checkIsSoterEnrolledInDevice`      | 获取设备内是否录入如指纹等生物信息的接口 |
+----------------------------------------------+------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.startSoterAuthentication
   wx.checkIsSupportSoterAuthentication
   wx.checkIsSoterEnrolledInDevice

微信运动
~~~~~~~~~~~~~~~~~~

+-------------------------+--------------------------------+
|          名称           |            功能说明            |
+=========================+================================+
| :func:`wx.getWeRunData` | 获取用户过去三十天微信运动步数 |
+-------------------------+--------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.getWeRunData

设备
-------

Wi-Fi
~~~~~~~~~~~~~~~~~~

+-----------------------------+--------------------------------+
|            名称             |            功能说明            |
+=============================+================================+
| :func:`wx.stopWifi`         | 关闭 Wi-Fi 模块                |
+-----------------------------+--------------------------------+
| :func:`wx.startWifi`        | 初始化 Wi-Fi 模块              |
+-----------------------------+--------------------------------+
| :func:`wx.setWifiList`      | 设置 wifiList 中 AP 的相关信息 |
+-----------------------------+--------------------------------+
| :func:`wx.onWifiConnected`  | 监听连接上 Wi-Fi 的事件        |
+-----------------------------+--------------------------------+
| :func:`wx.onGetWifiList`    | 监听获取到 Wi-Fi 列表数据事件  |
+-----------------------------+--------------------------------+
| :func:`wx.getWifiList`      | 请求获取 Wi-Fi 列表            |
+-----------------------------+--------------------------------+
| :func:`wx.getConnectedWifi` | 获取已连接中的 Wi-Fi 信息      |
+-----------------------------+--------------------------------+
| :func:`wx.connectWifi`      | 连接 Wi-Fi                     |
+-----------------------------+--------------------------------+
| :class:`WifiInfo`           | Wifi 信息                      |
+-----------------------------+--------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.stopWifi
   wx.startWifi
   wx.setWifiList
   wx.onWifiConnected
   wx.onGetWifiList
   wx.getWifiList
   wx.getConnectedWifi
   wx.connectWifi
   WifiInfo

iBeacon
~~~~~~~~~~~~~~~~~~

+----------------------------------+---------------------------------+
|               名称               |            功能说明             |
+==================================+=================================+
| :func:`wx.stopBeaconDiscovery`   | 停止搜索附近的 iBeacon 设备     |
+----------------------------------+---------------------------------+
| :func:`wx.startBeaconDiscovery`  | 开始搜索附近的 iBeacon 设备     |
+----------------------------------+---------------------------------+
| :func:`wx.onBeaconUpdate`        | 监听 iBeacon 设备更新事件       |
+----------------------------------+---------------------------------+
| :func:`wx.onBeaconServiceChange` | 监听 iBeacon 服务状态变化事件   |
+----------------------------------+---------------------------------+
| :func:`wx.getBeacons`            | 获取所有已搜索到的 iBeacon 设备 |
+----------------------------------+---------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.stopBeaconDiscovery
   wx.startBeaconDiscovery
   wx.onBeaconUpdate
   wx.onBeaconServiceChange
   wx.getBeacons
   IBeaconInfo

IBeaconInfo

联系人
~~~~~~~~~~~~~~~~~~

+----------------------------+----------------------+
|            名称            |       功能说明       |
+============================+======================+
| :func:`wx.addPhoneContact` | 添加手机通讯录联系人 |
+----------------------------+----------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.addPhoneContact


低功耗蓝牙
~~~~~~~~~~~~~~~~~~

+-----------------------------------------------+----------------------------------------------------------+
|                     名称                      |                         功能说明                         |
+===============================================+==========================================================+
| :func:`wx.writeBLECharacteristicValue`        | 向低功耗蓝牙设备特征值中写入二进制数据                   |
+-----------------------------------------------+----------------------------------------------------------+
| :func:`wx.readBLECharacteristicValue`         | 读取低功耗蓝牙设备的特征值的二进制数据值                 |
+-----------------------------------------------+----------------------------------------------------------+
| :func:`wx.onBLEConnectionStateChange`         | 监听低功耗蓝牙连接状态的改变事件                         |
+-----------------------------------------------+----------------------------------------------------------+
| :func:`wx.onBLECharacteristicValueChange`     | 监听低功耗蓝牙设备的特征值变化事件                       |
+-----------------------------------------------+----------------------------------------------------------+
| :func:`wx.notifyBLECharacteristicValueChange` | 启用低功耗蓝牙设备特征值变化时的 notify 功能，订阅特征值 |
+-----------------------------------------------+----------------------------------------------------------+
| :func:`wx.getBLEDeviceServices`               | 获取蓝牙设备所有服务(service)                            |
+-----------------------------------------------+----------------------------------------------------------+
| :func:`wx.getBLEDeviceCharacteristics`        | 获取蓝牙设备某个服务中所有特征值(characteristic)         |
+-----------------------------------------------+----------------------------------------------------------+
| :func:`wx.createBLEConnection`                | 连接低功耗蓝牙设备                                       |
+-----------------------------------------------+----------------------------------------------------------+
| :func:`wx.closeBLEConnection`                 | 断开与低功耗蓝牙设备的连接                               |
+-----------------------------------------------+----------------------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.writeBLECharacteristicValue
   wx.readBLECharacteristicValue
   wx.onBLEConnectionStateChange
   wx.onBLECharacteristicValueChange
   wx.notifyBLECharacteristicValueChange
   wx.getBLEDeviceServices
   wx.getBLEDeviceCharacteristics
   wx.createBLEConnection
   wx.closeBLEConnection


蓝牙
~~~~~~~~~~~~~~~~~~

+-------------------------------------------+--------------------------------------------+
|                   名称                    |                  功能说明                  |
+===========================================+============================================+
| :func:`wx.stopBluetoothDevicesDiscovery`  | 停止搜寻附近的蓝牙外围设备                 |
+-------------------------------------------+--------------------------------------------+
| :func:`wx.startBluetoothDevicesDiscovery` | 开始搜寻附近的蓝牙外围设备                 |
+-------------------------------------------+--------------------------------------------+
| :func:`wx.openBluetoothAdapter`           | 初始化蓝牙模块                             |
+-------------------------------------------+--------------------------------------------+
| :func:`wx.onBluetoothDeviceFound`         | 监听寻找到新设备的事件                     |
+-------------------------------------------+--------------------------------------------+
| :func:`wx.onBluetoothAdapterStateChange`  | 监听蓝牙适配器状态变化事件                 |
+-------------------------------------------+--------------------------------------------+
| :func:`wx.getConnectedBluetoothDevices`   | 根据 uuid 获取处于已连接状态的设备         |
+-------------------------------------------+--------------------------------------------+
| :func:`wx.getBluetoothDevices`            | 获取在蓝牙模块生效期间所有已发现的蓝牙设备 |
+-------------------------------------------+--------------------------------------------+
| :func:`wx.getBluetoothAdapterState`       | 获取本机蓝牙适配器状态                     |
+-------------------------------------------+--------------------------------------------+
| :func:`wx.closeBluetoothAdapter`          | 关闭蓝牙模块                               |
+-------------------------------------------+--------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.stopBluetoothDevicesDiscovery
   wx.startBluetoothDevicesDiscovery
   wx.openBluetoothAdapter
   wx.onBluetoothDeviceFound
   wx.onBluetoothAdapterStateChange
   wx.getConnectedBluetoothDevices
   wx.getBluetoothDevices
   wx.getBluetoothAdapterState
   wx.closeBluetoothAdapter


电量
~~~~~~~~~~~~~~~~~~

+-------------------------------+--------------------------------------+
|             名称              |               功能说明               |
+===============================+======================================+
| :func:`wx.getBatteryInfoSync` | :func:`wx.getBatteryInfo` 的同步版本 |
+-------------------------------+--------------------------------------+
| :func:`wx.getBatteryInfo`     | 获取设备电量                         |
+-------------------------------+--------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.getBatteryInfoSync
   wx.getBatteryInfo


剪贴板
~~~~~~~~~~~~~~~~~~

+-----------------------------+----------------------+
|            名称             |       功能说明       |
+=============================+======================+
| :func:`wx.setClipboardData` | 设置系统剪贴板的内容 |
+-----------------------------+----------------------+
| :func:`wx.getClipboardData` | 获取系统剪贴板的内容 |
+-----------------------------+----------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.setClipboardData
   wx.getClipboardData


NFC
~~~~~~~~~~~~~~~~~~

+---------------------------+-------------------------------+
|           名称            |           功能说明            |
+===========================+===============================+
| :func:`wx.stopHCE`        | 关闭 NFC 模块                 |
+---------------------------+-------------------------------+
| :func:`wx.startHCE`       | 初始化 NFC 模块               |
+---------------------------+-------------------------------+
| :func:`wx.sendHCEMessage` | 发送 NFC 消息                 |
+---------------------------+-------------------------------+
| :func:`wx.onHCEMessage`   | 监听接收 NFC 设备消息事件     |
+---------------------------+-------------------------------+
| :func:`wx.getHCEState`    | 判断当前设备是否支持 HCE 能力 |
+---------------------------+-------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.stopHCE
   wx.startHCE
   wx.sendHCEMessage
   wx.onHCEMessage
   wx.getHCEState

网络
~~~~~~~~~~~~~~~~~~

+----------------------------------+----------------------+
|               名称               |       功能说明       |
+==================================+======================+
| :func:`wx.onNetworkStatusChange` | 监听网络状态变化事件 |
+----------------------------------+----------------------+
| :func:`wx.getNetworkType`        | 获取网络类型         |
+----------------------------------+----------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.onNetworkStatusChange
   wx.getNetworkType


屏幕
~~~~~~~~~~~~~~~~~~

+--------------------------------+----------------------+
|              名称              |       功能说明       |
+================================+======================+
| :func:`wx.setScreenBrightness` | 设置屏幕亮度         |
+--------------------------------+----------------------+
| :func:`wx.setKeepScreenOn`     | 设置是否保持常亮状态 |
+--------------------------------+----------------------+
| :func:`wx.onUserCaptureScreen` | 监听用户主动截屏事件 |
+--------------------------------+----------------------+
| :func:`wx.getScreenBrightness` | 获取屏幕亮度         |
+--------------------------------+----------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.setScreenBrightness
   wx.setKeepScreenOn
   wx.onUserCaptureScreen
   wx.getScreenBrightness

电话
~~~~~~~~~~~~~~~~~~

+--------------------------+----------+
|           名称           | 功能说明 |
+==========================+==========+
| :func:`wx.makePhoneCall` | 拨打电话 |
+--------------------------+----------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.makePhoneCall


加速计
~~~~~~~~~~~~~~~~~~

+----------------------------------+--------------------+
|               名称               |      功能说明      |
+==================================+====================+
| :func:`wx.stopAccelerometer`     | 停止监听加速度数据 |
+----------------------------------+--------------------+
| :func:`wx.startAccelerometer`    | 开始监听加速度数据 |
+----------------------------------+--------------------+
| :func:`wx.onAccelerometerChange` | 监听加速度数据事件 |
+----------------------------------+--------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.stopAccelerometer
   wx.startAccelerometer
   wx.onAccelerometerChange


罗盘
~~~~~~~~~~~~~~~~~~

+----------------------------+----------------------+
|            名称            |       功能说明       |
+============================+======================+
| :func:`wx.stopCompass`     | 停止监听罗盘数据     |
+----------------------------+----------------------+
| :func:`wx.startCompass`    | 开始监听罗盘数据     |
+----------------------------+----------------------+
| :func:`wx.onCompassChange` | 监听罗盘数据变化事件 |
+----------------------------+----------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.stopCompass
   wx.startCompass
   wx.onCompassChange


设备方向
~~~~~~~~~~~~~~~~~~

+---------------------------------------+------------------------+
|                 名称                  |        功能说明        |
+=======================================+========================+
| :func:`wx.stopDeviceMotionListening`  | 停止监听设备方向的变化 |
+---------------------------------------+------------------------+
| :func:`wx.startDeviceMotionListening` | 开始监听设备方向的变化 |
+---------------------------------------+------------------------+
| :func:`wx.onDeviceMotionChange`       | 监听设备方向变化事件   |
+---------------------------------------+------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.stopDeviceMotionListening
   wx.startDeviceMotionListening
   wx.onDeviceMotionChange


陀螺仪
~~~~~~~~~~~~~~~~~~

+------------------------------+------------------------+
|             名称             |        功能说明        |
+==============================+========================+
| :func:`wx.stopGyroscope`     | 停止监听陀螺仪数据     |
+------------------------------+------------------------+
| :func:`wx.startGyroscope`    | 开始监听陀螺仪数据     |
+------------------------------+------------------------+
| :func:`wx.onGyroscopeChange` | 监听陀螺仪数据变化事件 |
+------------------------------+------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.stopGyroscope
   wx.startGyroscope
   wx.onGyroscopeChange


性能
~~~~~~~~~~~~~~~~~~

+----------------------------+----------------------+
|            名称            |       功能说明       |
+============================+======================+
| :func:`wx.onMemoryWarning` | 监听内存不足告警事件 |
+----------------------------+----------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.onMemoryWarning


扫码
~~~~~~~~~~~~~~~~~~

+---------------------+----------------------------+
|        名称         |          功能说明          |
+=====================+============================+
| :func:`wx.scanCode` | 调起客户端扫码界面进行扫码 |
+---------------------+----------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.scanCode


振动
~~~~~~~~~~~~~~~~~~

+-------------------------+-----------------------------------+
|          名称           |             功能说明              |
+=========================+===================================+
| :func:`wx.vibrateShort` | 使手机发生较短时间的振动（15 ms） |
+-------------------------+-----------------------------------+
| :func:`wx.vibrateLong`  | 使手机发生较长时间的振动（400 ms) |
+-------------------------+-----------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.vibrateShort
   wx.vibrateLong


Worker
-----------

+----------------------------+--------------------------------------------------+
|            名称            |                     功能说明                     |
+============================+==================================================+
| :func:`wx.createWorker`    | 创建一个 Worker 线程                             |
+----------------------------+--------------------------------------------------+
| :class:`Worker`            | Worker 线程                                      |
+----------------------------+--------------------------------------------------+
| :func:`Worker.onMessage`   | 监听主线程/Worker 线程向当前线程发送的消息的事件 |
+----------------------------+--------------------------------------------------+
| :func:`Worker.postMessage` | 向主线程/Worker 线程发送的消息                   |
+----------------------------+--------------------------------------------------+
| :func:`Worker.terminate`   | 结束当前 Worker 线程                             |
+----------------------------+--------------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   Worker

第三方平台
-------------

+-----------------------------+------------------------------------+
|            名称             |              功能说明              |
+=============================+====================================+
| :func:`wx.getExtConfigSync` | :func:`wx.getExtConfig` 的同步版本 |
+-----------------------------+------------------------------------+
| :func:`wx.getExtConfig`     | 获取第三方平台自定义的数据字段     |
+-----------------------------+------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.getExtConfigSync
   wx.getExtConfig

WXML
-------

+---------------------------------------+----------------------------------------------+
|                 名称                  |                   功能说明                   |
+=======================================+==============================================+
| :func:`wx.createSelectorQuery`        | 返回一个 SelectorQuery 对象实例              |
+---------------------------------------+----------------------------------------------+
| :func:`wx.createIntersectionObserver` | 创建并返回一个 IntersectionObserver 对象实例 |
+---------------------------------------+----------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   wx.createSelectorQuery
   wx.createIntersectionObserver

SelectorQuery
~~~~~~~~~~~~~~~~~~

+--------------------------------------+--------------------------------------------------+
|                 名称                 |                     功能说明                     |
+======================================+==================================================+
| :func:`SelectorQuery.exec`           | 执行所有的请求                                   |
+--------------------------------------+--------------------------------------------------+
| :func:`SelectorQuery.in`             | 将选择器的选取范围更改为自定义组件 component 内  |
+--------------------------------------+--------------------------------------------------+
| :func:`SelectorQuery.select`         | 在当前页面下选择第一个匹配选择器 selector 的节点 |
+--------------------------------------+--------------------------------------------------+
| :func:`SelectorQuery.selectAll`      | 在当前页面下选择匹配选择器 selector 的所有节点   |
+--------------------------------------+--------------------------------------------------+
| :func:`SelectorQuery.selectViewport` | 选择显示区域                                     |
+--------------------------------------+--------------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   SelectorQuery
   SelectorQuery.exec
   SelectorQuery.in
   SelectorQuery.select
   SelectorQuery.selectAll
   SelectorQuery.selectViewport

NodesRef
~~~~~~~~~~~~~~~~~~

+-------------------------------------+---------------------------------+
|                名称                 |            功能说明             |
+=====================================+=================================+
| :func:`NodesRef.boundingClientRect` | 添加节点的布局位置的查询请求    |
+-------------------------------------+---------------------------------+
| :func:`NodesRef.context`            | 添加节点的 Context 对象查询请求 |
+-------------------------------------+---------------------------------+
| :func:`NodesRef.fields`             | 获取节点的相关信息              |
+-------------------------------------+---------------------------------+
| :func:`NodesRef.scrollOffset`       | 添加节点的滚动位置查询请求      |
+-------------------------------------+---------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   NodesRef
   NodesRef.boundingClientRect
   NodesRef.context
   NodesRef.fields
   NodesRef.scrollOffset

IntersectionObserver
~~~~~~~~~~~~~~~~~~~~~~~~

+-------------------------------------------------+------------------------------------------+
|                      名称                       |                 功能说明                 |
+=================================================+==========================================+
| :func:`IntersectionObserver.disconnect`         | 停止监听                                 |
+-------------------------------------------------+------------------------------------------+
| :func:`IntersectionObserver.observe`            | 指定目标节点并开始监听相交状态变化情况   |
+-------------------------------------------------+------------------------------------------+
| :func:`IntersectionObserver.relativeTo`         | 使用选择器指定一个节点，作为参照区域之一 |
+-------------------------------------------------+------------------------------------------+
| :func:`IntersectionObserver.relativeToViewport` | 指定页面显示区域作为参照区域之一         |
+-------------------------------------------------+------------------------------------------+

.. toctree::
   :maxdepth: 1
   :hidden:

   IntersectionObserver
   IntersectionObserver.disconnect
   IntersectionObserver.observe
   IntersectionObserver.relativeTo
   IntersectionObserver.relativeToViewport
