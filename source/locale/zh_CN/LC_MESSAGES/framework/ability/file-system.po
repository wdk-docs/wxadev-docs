# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Nosy
# This file is distributed under the same license as the wxadev package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: wxadev \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-09 22:55+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/framework/ability/file-system.rst:2
msgid ":wxfrwk:`文件系统 <ability/file-system>`"
msgstr ""

#: ../../source/framework/ability/file-system.rst:4
msgid ""
"文件系统是小程序提供的一套以小程序和用户维度隔离的存储以及一套相应的管理接口。 通过 "
":func:`wx.getFileSystemManager()` 可以获取到全局唯一的文件系统管理器， 所有文件系统的管理操作通过 "
":class:`FileSystemManager` 来调用。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:12
msgid "文件主要分为两大类："
msgstr ""

#: ../../source/framework/ability/file-system.rst:14
msgid "**代码包文件**：代码包文件指的是在项目目录中添加的文件。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:15
msgid "**本地文件**：通过调用接口本地产生，或通过网络下载下来，存储到本地的文件。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:17
msgid "其中本地文件又分为三种："
msgstr ""

#: ../../source/framework/ability/file-system.rst:19
msgid "**本地临时文件**：临时产生，随时会被回收的文件。不限制存储大小。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:20
msgid ""
"**本地缓存文件**：小程序通过接口把本地临时文件缓存后产生的文件，不能自定义目录和文件名。 "
"除非用户主动删除小程序，否则不会被删除。跟本地用户文件共计， 普通小程序最多可存储 10MB，游戏类目的小程序最多可存储 50MB。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:23
msgid ""
"**本地用户文件**：小程序通过接口把本地临时文件缓存后产生的文件，允许自定义目录和文件名。 "
"除非用户主动删除小程序，否则不会被删除。跟本地缓存文件共计， 普通小程序最多可存储 10MB，游戏类目的小程序最多可存储 50MB。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:28
#: ../../source/framework/ability/file-system.rst:121
msgid "代码包文件"
msgstr ""

#: ../../source/framework/ability/file-system.rst:30
msgid "由于代码包文件大小限制，代码包文件适用于放置首次加载时需要的文件，对于内容较大或需要动态替换的文件，不推荐用添加到代码包中，推荐在小游戏启动之后再用下载接口下载到本地。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:33
msgid "访问代码包文件"
msgstr ""

#: ../../source/framework/ability/file-system.rst:35
msgid "代码包文件的访问方式是从项目根目录开始写文件路径，不支持相对路径的写法。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:40
msgid "修改代码包文件"
msgstr ""

#: ../../source/framework/ability/file-system.rst:42
msgid "代码包内的文件无法在运行后动态修改或删除，修改代码包文件需要重新发布版本。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:45
msgid "本地文件"
msgstr ""

#: ../../source/framework/ability/file-system.rst:47
msgid ""
"本地文件指的是小程序被用户添加到手机后，会有一块独立的文件存储区域，以用户维度隔离。即同一台手机，每个微信用户不能访问到其他登录用户的文件，同一个用户不同"
" appId 之间的文件也不能互相访问。 本地文件沙盒.png"
msgstr ""

#: ../../source/framework/ability/file-system.rst:51
msgid "本地文件的文件路径均为以下格式::"
msgstr ""

#: ../../source/framework/ability/file-system.rst:61
#: ../../source/framework/ability/file-system.rst:123
msgid "本地临时文件"
msgstr ""

#: ../../source/framework/ability/file-system.rst:63
msgid ""
"本地临时文件只能通过调用特定接口产生，不能直接写入内容。本地临时文件产生后，仅在当前生命周期内有效，重启之后即不可用。 "
"因此，不可把本地临时文件路径存储起来下次使用。如果需要下次在使用， 可通过 "
":func:`FileSystemManager.saveFile()` 或 "
":func:`FileSystemManager.copyFile()` 接口把本地临时文件转换成本地缓存文件或本地用户文件。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:68
#: ../../source/framework/ability/file-system.rst:85
#: ../../source/framework/ability/file-system.rst:108
msgid "示例"
msgstr ""

#: ../../source/framework/ability/file-system.rst:79
#: ../../source/framework/ability/file-system.rst:125
msgid "本地缓存文件"
msgstr ""

#: ../../source/framework/ability/file-system.rst:81
msgid ""
"本地缓存文件只能通过调用特定接口产生，不能直接写入内容。 本地缓存文件产生后，重启之后仍可用。 本地缓存文件只能通过 "
":func:`FileSystemManager.saveFile()` 接口将本地临时文件保存获得。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:97
msgid ""
"本地缓存文件是最初的设计，1.7.0 版本开始，提供了功能更完整的本地用户文件， 可以完全覆盖本地缓存文件的功能，如果不需要兼容低于 1.7.0 "
"版本，可以不使用本地缓存文件。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:101
#: ../../source/framework/ability/file-system.rst:127
msgid "本地用户文件"
msgstr ""

#: ../../source/framework/ability/file-system.rst:105
msgid ""
"我们提供了一个用户文件目录给开发者，开发者对这个目录有完全自由的读写权限。 通过 :data:`wx.env.USER_DATA_PATH` "
"可以获取到这个目录的路径。"
msgstr ""

#: ../../source/framework/ability/file-system.rst:116
msgid "读写权限"
msgstr ""

#: ../../source/framework/ability/file-system.rst:119
msgid "接口、组件"
msgstr ""

#: ../../source/framework/ability/file-system.rst:119
msgid "读"
msgstr ""

#: ../../source/framework/ability/file-system.rst:119
msgid "写"
msgstr ""

#: ../../source/framework/ability/file-system.rst:121
#: ../../source/framework/ability/file-system.rst:123
#: ../../source/framework/ability/file-system.rst:125
#: ../../source/framework/ability/file-system.rst:127
msgid "有"
msgstr ""

#: ../../source/framework/ability/file-system.rst:121
#: ../../source/framework/ability/file-system.rst:123
#: ../../source/framework/ability/file-system.rst:125
msgid "无"
msgstr ""

